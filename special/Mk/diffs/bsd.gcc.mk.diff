--- bsd.gcc.mk.orig	2015-02-12 22:12:28 UTC
+++ bsd.gcc.mk
@@ -40,20 +40,22 @@ GCCVERSIONS=	040200 040600 040700 040800
 # The first field if the OSVERSION in which it appeared in the base.
 # The second field is the OSVERSION in which it disappeared from the base.
 # The third field is the version as USE_GCC would use.
-GCCVERSION_040200=	700042 9999999 4.2
-GCCVERSION_040600=	     0       0 4.6
-GCCVERSION_040700=	     0       0 4.7
-GCCVERSION_040800=	     0       0 4.8
-GCCVERSION_040900=	     0       0 4.9
-GCCVERSION_050000=	     0       0 5
+GCCVERSION_040200=	     0       0 4.2 42
+GCCVERSION_040600=	     0       0 4.6 43
+GCCVERSION_040800=	     0       0 4.8 48
+GCCVERSION_040900=	     0       0 4.9 49
+
+.if defined(NO_GCC50)
+GCCVERSION_040700=	300400 9999999 4.7 47
+GCCVERSION_050000=	     0       0 5   50
+.else
+GCCVERSION_040700=	300400  400102 4.7 47
+GCCVERSION_050000=	400103 9999999 5   50
+.endif
 
 # No configurable parts below this. ####################################
 #
 
-.if defined(USE_GCC) && ${USE_GCC} == yes
-USE_GCC=	${GCC_DEFAULT}+
-.endif
-
 # Extract the fields from GCCVERSION_...
 .for v in ${GCCVERSIONS}
 . for j in ${GCCVERSION_${v}}
@@ -63,17 +65,31 @@ _GCCVERSION_${v}_L=	${j}
 _GCCVERSION_${v}_R=	${j}
 .  elif !defined(_GCCVERSION_${v}_V)
 _GCCVERSION_${v}_V=	${j}
+.  elif !defined(_GCCVERSION_${v}_VV)
+_GCCVERSION_${v}_VV=	${j}
 .  endif
 . endfor
 .endfor
 
+.if !defined(NO_GCC50) && ${DFLYVERSION} >= ${_GCCVERSION_050000_L}
+LASTBASE=		5
+DFLY_DEFAULT_VERSION=	50
+.else
+LASTBASE=		4.7
+DFLY_DEFAULT_VERSION=	47
+.endif
+
+.if ${USE_GCC:Myes}
+USE_GCC=	${LASTBASE}
+.endif
+
 .if defined(USE_GCC) && !defined(FORCE_BASE_CC_FOR_TESTING)
 
 . if ${USE_GCC} == any
 
 # Enable the clang-is-cc workaround.  Default to the last GCC imported
 # into base.
-_USE_GCC:=	4.2
+_USE_GCC:=	${LASTBASE}
 _GCC_ORLATER:=	true
 
 . else # ${USE_GCC} == any
@@ -89,12 +105,10 @@ _GCC_ORLATER:=	true
 # Initialize _GCC_FOUND${v}.  In parallel, check if USE_GCC points to a
 # valid version to begin with.
 .for v in ${GCCVERSIONS}
-. if exists(${LOCALBASE}/bin/gcc${_GCCVERSION_${v}_V:S/.//})
-_GCC_FOUND${v}=	port
-. elif ${OSVERSION} >= ${_GCCVERSION_${v}_L} && ${OSVERSION} < ${_GCCVERSION_${v}_R}
-.  if exists(/usr/bin/gcc)
+. if ${DFLY_DEFAULT_VERSION} >= ${_GCCVERSION_${v}_VV}
 _GCC_FOUND${v}=	base
-.  endif
+. elif exists(${LOCALBASE}/bin/gcc${_GCCVERSION_${v}_V:S/.//})
+_GCC_FOUND${v}=	port
 . endif
 . if ${_USE_GCC}==${_GCCVERSION_${v}_V}
 _GCCVERSION_OKAY=	true
@@ -111,6 +125,11 @@ IGNORE=	Unknown version of GCC specified
 # get the first available version.
 #
 .if defined(_GCC_ORLATER)
+. if ${_USE_GCC:M5} && ${DFLY_DEFAULT_VERSION:M50}
+#  _USE_GCC is already correct
+. elif ${_USE_GCC:N5} && (${_USE_GCC:S/.//} <= ${DFLY_DEFAULT_VERSION})
+_USE_GCC= ${LASTBASE}
+. else # HEAD ORIG - run on 4.0 and below
 . for v in ${GCCVERSIONS}
 .  if ${_USE_GCC} == ${_GCCVERSION_${v}_V}
 _GCC_MIN1:=	true
@@ -133,6 +152,12 @@ _USE_GCC:=	${_GCC_FOUND}
 . elif ${_USE_GCC} < ${GCC_DEFAULT}
 _USE_GCC:=	${GCC_DEFAULT}
 . endif
+. endif   # TAIL ORIG
+.else  # defined(_GCC_ORLATER)
+. if ${_USE_GCC:M4.[67]}
+_USE_GCC=		4.7
+DFLY_DEFAULT_VERSION=	47
+. endif
 .endif # defined(_GCC_ORLATER)
 
 .endif # defined(USE_GCC)
@@ -144,7 +169,8 @@ _USE_GCC:=	${GCC_DEFAULT}
 # dependencies, CC, CXX, CPP, and flags.
 .for v in ${GCCVERSIONS}
 . if ${_USE_GCC} == ${_GCCVERSION_${v}_V}
-.  if ${OSVERSION} < ${_GCCVERSION_${v}_L} || ${OSVERSION} > ${_GCCVERSION_${v}_R} || !exists(/usr/bin/gcc)
+.  if (${_GCCVERSION_${v}_L} == 0 && ${_GCCVERSION_${v}_R} == 0) || \
+      ${DFLYVERSION} < ${_GCCVERSION_${v}_L}
 V:=			${_GCCVERSION_${v}_V:S/.//}
 _GCC_PORT_DEPENDS:=	gcc${V}
 .   if ${_USE_GCC} == ${LANG_GCC_IS}
@@ -162,11 +188,9 @@ LDFLAGS+=		-Wl,-rpath=${_GCC_RUNTIME} -L
 .  else # Use GCC in base.
 CC:=			gcc
 CXX:=			g++
-.   if exists(/usr/bin/gcpp)
-CPP:=			gcpp
-.   else
 CPP:=			cpp
-.   endif
+CONFIGURE_ENV+=		CCVER=gcc${DFLY_DEFAULT_VERSION}
+MAKE_ENV+=		CCVER=gcc${DFLY_DEFAULT_VERSION}
 .  endif # Use GCC in base.
 . endif # ${_USE_GCC} == ${_GCCVERSION_${v}_V}
 .endfor
@@ -205,6 +229,8 @@ test-gcc:
 .endif
 	@echo CC=${CC} - CXX=${CXX} - CPP=${CPP} - CFLAGS=\"${CFLAGS}\"
 	@echo LDFLAGS=\"${LDFLAGS}\"
+	@echo CONFIGURE_ENV=${CONFIGURE_ENV}
+	@echo MAKE_ENV=${MAKE_ENV}
 	@echo "BUILD_DEPENDS=${BUILD_DEPENDS}"
 	@echo "RUN_DEPENDS=${RUN_DEPENDS}"
 .endif
