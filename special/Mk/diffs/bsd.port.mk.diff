--- bsd.port.mk.orig	2014-10-20 21:20:14 UTC
+++ bsd.port.mk
@@ -43,7 +43,8 @@ FreeBSD_MAINTAINER=	portmgr@FreeBSD.org
 #				  makefile is being used on.  Automatically set to
 #				  "FreeBSD," "NetBSD," or "OpenBSD" as appropriate.
 # OSREL			- The release version (numeric) of the operating system.
-# OSVERSION		- The value of __FreeBSD_version.
+# OSVERSION		- 9999999 - try to ignore FreeBSD version check
+# DFLYVERSION		- The value of __DragonFly_version.
 #
 # This is the beginning of the list of all variables that need to be
 # defined in a port, listed in order that they should be included
@@ -553,6 +554,12 @@ FreeBSD_MAINTAINER=	portmgr@FreeBSD.org
 #				  Default: ${MASTERDIR}/scripts
 # FILESDIR		- A directory containing any miscellaneous additional files.
 #				  Default: ${MASTERDIR}/files
+# DFLY_PATCHDIR=	- A directory containing additional patches required
+#				  to build port on DragonFly
+#				  Default: ${MASTERDIR}/dragonfly
+# DFLY_FILESDIR 	- A directory containing any miscellaneous files
+#				  needed to build port on DragonFly
+#				  Default: ${MASTERDIR}/dragonfly
 # PKGDIR		- A directory containing any package creation files.
 #				  Default: ${MASTERDIR}
 # SRC_BASE		- The root of the src tree.  (Some ports require this to get
@@ -1059,10 +1066,15 @@ FreeBSD_MAINTAINER=	portmgr@FreeBSD.org
 # These need to be absolute since we don't know how deep in the ports
 # tree we are and thus can't go relative.  They can, of course, be overridden
 # by individual Makefiles or local system make configuration.
-PORTSDIR?=		/usr/ports
+WITH_PKGNG?=		yes
+WITHOUT_FBSD10_FIX?=	yes
+DFLY_PATCHDIR?= 	${MASTERDIR}/dragonfly
+DFLY_FILESDIR?= 	${MASTERDIR}/dragonfly
+PORTSDIR?=		/usr/dports
 LOCALBASE?=		/usr/local
 LINUXBASE?=		/compat/linux
-DISTDIR?=		${PORTSDIR}/distfiles
+DISTDIR?=		/usr/distfiles
+WRKDIRPREFIX?=		/usr/obj/dports
 _DISTDIR?=		${DISTDIR}/${DIST_SUBDIR}
 INDEXDIR?=		${PORTSDIR}
 SRC_BASE?=		/usr/src
@@ -1194,24 +1206,18 @@ OSREL?=	${UNAMER:C/-.*//}
 
 # Get __FreeBSD_version
 .if !defined(OSVERSION)
+OSVERSION=	9999999
+.endif
+
+.if !defined(DFLYVERSION)
 .if exists(/usr/include/sys/param.h)
-OSVERSION!=	${AWK} '/^\#define[[:blank:]]__FreeBSD_version/ {print $$3}' < /usr/include/sys/param.h
-.elif exists(${SRC_BASE}/sys/sys/param.h)
-OSVERSION!=	${AWK} '/^\#define[[:blank:]]__FreeBSD_version/ {print $$3}' < ${SRC_BASE}/sys/sys/param.h
+DFLYVERSION!=	${AWK} '/^\#define[[:blank:]]__DragonFly_version/ {print $$3}' < /usr/include/sys/param.h
+OSREL!=		${ECHO} ${DFLYVERSION} | ${AWK} '{a=int($$1/100000); b=int(($$1-(a*100000))/100); print a "." b}'
 .else
 .error Unable to determine OS version.  Either define OSVERSION, install /usr/include/sys/param.h or define SRC_BASE.
 .endif
 .endif
 
-# Convert OSVERSION to major release number
-_OSVERSION_MAJOR=	${OSVERSION:C/([0-9]?[0-9])([0-9][0-9])[0-9]{3}/\1/}
-# Sanity checks for chroot/jail building.
-.if ${_OSVERSION_MAJOR} != ${UNAMER:R}
-.error UNAME_r (${UNAMER}) and OSVERSION (${OSVERSION}) do not agree on major version number.
-.elif ${_OSVERSION_MAJOR} != ${OSREL:R}
-.error OSREL (${OSREL}) and OSVERSION (${OSVERSION}) do not agree on major version number.
-.endif
-
 # Enable new xorg for FreeBSD versions after Radeon KMS was imported unless
 # WITHOUT_NEW_XORG is set.
 .if !defined(WITHOUT_NEW_XORG)
@@ -1323,6 +1329,25 @@ WITH_DEBUG=	yes
 
 .include "${PORTSDIR}/Mk/bsd.options.mk"
 
+# Multiple make jobs support
+.if defined(DISABLE_MAKE_JOBS) || defined(MAKE_JOBS_UNSAFE)
+_MAKE_JOBS=		#
+MAKE_JOBS_NUMBER=	1
+.else
+.if defined(MAKE_JOBS_NUMBER)
+_MAKE_JOBS_NUMBER:=	${MAKE_JOBS_NUMBER}
+.else
+_MAKE_JOBS_NUMBER!=	${SYSCTL} -n hw.ncpu
+.endif
+.if defined(MAKE_JOBS_NUMBER_LIMIT) && ( ${MAKE_JOBS_NUMBER_LIMIT} < ${_MAKE_JOBS_NUMBER} )
+MAKE_JOBS_NUMBER=	${MAKE_JOBS_NUMBER_LIMIT}
+.else
+MAKE_JOBS_NUMBER=	${_MAKE_JOBS_NUMBER}
+.endif
+_MAKE_JOBS?=		-j${MAKE_JOBS_NUMBER}
+BUILD_FAIL_MESSAGE+=	Try to set MAKE_JOBS_UNSAFE=yes and rebuild before reporting the failure to the maintainer.
+.endif
+
 # Start of pre-makefile section.
 .if !defined(AFTERPORTMK) && !defined(INOPTIONSMK)
 
@@ -1353,7 +1378,7 @@ PKGVERSION=	${PORTVERSION:C/[-_,]/./g}${
 PKGNAME=	${PKGNAMEPREFIX}${PORTNAME}${PKGNAMESUFFIX}-${PKGVERSION}
 DISTNAME?=	${PORTNAME}-${DISTVERSIONPREFIX}${DISTVERSION:C/:(.)/\1/g}${DISTVERSIONSUFFIX}
 
-INDEXFILE?=		INDEX-${OSVERSION:C/([0-9]*)[0-9]{5}/\1/}
+INDEXFILE?=		INDEX-${DFLYVERSION:C/([0-9]*)[0-9]{5}/\1/}
 
 DOCSDIR?=		${PREFIX}/share/doc/${PORTNAME}
 EXAMPLESDIR?=		${PREFIX}/share/examples/${PORTNAME}
@@ -1373,7 +1398,7 @@ ETCDIR?=		${PREFIX}/etc/${PORTNAME}
 .include "${PORTSDIR}/Mk/bsd.xorg.mk"
 .endif
 
-PACKAGES?=		${PORTSDIR}/packages
+PACKAGES?=		/usr/packages
 TEMPLATES?=		${PORTSDIR}/Templates
 KEYWORDS?=		${PORTSDIR}/Keywords
 
@@ -1559,7 +1584,7 @@ DEV_ERROR+=	"${PKGNAME}: Makefile error:
 
 _POSTMKINCLUDED=	yes
 
-WRKDIR?=		${WRKDIRPREFIX}${.CURDIR}/work
+WRKDIR?=		${WRKDIRPREFIX}/${.CURDIR:H:T}/${.CURDIR:T}/work
 .if !defined(IGNORE_MASTER_SITE_GITHUB) && defined(USE_GITHUB)
 WRKSRC?=		${WRKDIR}/${GH_ACCOUNT}-${GH_PROJECT}-${GH_COMMIT}
 .endif
@@ -1594,7 +1619,9 @@ PLIST_SUB_SED?= ${PLIST_SUB:C/.*=.{1,${P
 
 # kludge to strip trailing whitespace from CFLAGS;
 # sub-configure will not # survive double space
-CFLAGS:=	${CFLAGS:C/ $//}
+# remove -O from /usr/share/mk/sys.mk and replace with -O2
+CFLAGS:=	${CFLAGS:C/ $//:N-O}
+CFLAGS+=	-O2
 
 .if defined(WITHOUT_CPU_CFLAGS)
 .if defined(_CPUCFLAGS)
@@ -1690,6 +1717,11 @@ PKG_DEPENDS+=	${LOCALBASE}/sbin/pkg:${PO
 
 .if defined(USE_GCC)
 .include "${PORTSDIR}/Mk/bsd.gcc.mk"
+.else
+.  if !defined(USE_GNUSTEP)
+CONFIGURE_ENV+= 	CCVER=gcc47
+MAKE_ENV+=		CCVER=gcc47
+.  endif
 .endif
 
 .if defined(USE_BINUTILS) && !defined(DISABLE_BINUTILS)
@@ -2025,9 +2057,11 @@ DISTINFO_FILE?=		${MASTERDIR}/distinfo
 MAKE_FLAGS?=	-f
 MAKEFILE?=		Makefile
 MAKE_CMD?=		/usr/bin/make
+PLIST_SUB+=		PROFILE="@comment "
 MAKE_ENV+=		PREFIX=${PREFIX} \
 			LOCALBASE=${LOCALBASE} \
 			LIBDIR="${LIBDIR}" \
+			NOPROFILE=1 \
 			CC="${CC}" CFLAGS="${CFLAGS}" \
 			CPP="${CPP}" CPPFLAGS="${CPPFLAGS}" \
 			LDFLAGS="${LDFLAGS}" LIBS="${LIBS}" \
@@ -2055,25 +2089,6 @@ ${lang}FLAGS+=	${${lang}FLAGS_${ARCH}}
 .endif
 .endfor
 
-# Multiple make jobs support
-.if defined(DISABLE_MAKE_JOBS) || defined(MAKE_JOBS_UNSAFE)
-_MAKE_JOBS=		#
-MAKE_JOBS_NUMBER=	1
-.else
-.if defined(MAKE_JOBS_NUMBER)
-_MAKE_JOBS_NUMBER:=	${MAKE_JOBS_NUMBER}
-.else
-_MAKE_JOBS_NUMBER!=	${SYSCTL} -n kern.smp.cpus
-.endif
-.if defined(MAKE_JOBS_NUMBER_LIMIT) && ( ${MAKE_JOBS_NUMBER_LIMIT} < ${_MAKE_JOBS_NUMBER} )
-MAKE_JOBS_NUMBER=	${MAKE_JOBS_NUMBER_LIMIT}
-.else
-MAKE_JOBS_NUMBER=	${_MAKE_JOBS_NUMBER}
-.endif
-_MAKE_JOBS?=		-j${MAKE_JOBS_NUMBER}
-BUILD_FAIL_MESSAGE+=	Try to set MAKE_JOBS_UNSAFE=yes and rebuild before reporting the failure to the maintainer.
-.endif
-
 # ccache support
 
 # Try to set a default CCACHE_DIR to workaround HOME=/dev/null and
@@ -2175,14 +2190,42 @@ PATCH_DIST_ARGS+=	--suffix .orig
 TAR?=	/usr/bin/tar
 
 # EXTRACT_SUFX is defined in .pre.mk section
-EXTRACT_CMD?=	${TAR}
-EXTRACT_BEFORE_ARGS?=	-xf
+
+LHA_BEFORE_ARGS?=	xfpw=${WRKDIR}
+LHA_AFTER_ARGS?=
+
 .if defined(EXTRACT_PRESERVE_OWNERSHIP)
-EXTRACT_AFTER_ARGS?=
+TAR_AFTER_ARGS_DEFAULT=
 .else
-EXTRACT_AFTER_ARGS?=	--no-same-owner --no-same-permissions
+TAR_AFTER_ARGS_DEFAULT=	--no-same-owner --no-same-permissions
+.endif
+TAR_BEFORE_ARGS_DEFAULT= -xf
+
+.if !defined(TAR_BEFORE_ARGS)
+.  if defined(EXTRACT_BEFORE_ARGS)
+TAR_BEFORE_ARGS=	${EXTRACT_BEFORE_ARGS}
+.  else
+TAR_BEFORE_ARGS=	${TAR_BEFORE_ARGS_DEFAULT}
+.  endif
+.endif
+
+# ZIP_* variables are always defined by zip.mk, so ?= only kicks in USES+=zip
+# when does not exist.  In this case, assume $TAR is desired for zip archives
+ZIP_BEFORE_ARGS?=	${TAR_BEFORE_ARGS_DEFAULT}
+ZIP_AFTER_ARGS?=	${TAR_AFTER_ARGS_DEFAULT}
+ZIP_EXTRACT_CMD?=	${TAR}
+
+.if !defined(TAR_AFTER_ARGS)
+.  if defined(EXTRACT_AFTER_ARGS)
+TAR_AFTER_ARGS=		${EXTRACT_AFTER_ARGS}
+.  else
+TAR_AFTER_ARGS=		${TAR_AFTER_ARGS_DEFAULT}
+.  endif
 .endif
 
+EXTRACT_BEFORE_ARGS?=	${TAR_BEFORE_ARGS_DEFAULT}
+EXTRACT_AFTER_ARGS?=	${TAR_AFTER_ARGS_DEFAULT}
+
 # Figure out where the local mtree file is
 .if !defined(MTREE_FILE) && !defined(NO_MTREE)
 .if ${PREFIX} == /usr
@@ -2768,6 +2811,8 @@ SET_LATE_CONFIGURE_ARGS= \
 SCRIPTS_ENV+=	CURDIR=${MASTERDIR} DISTDIR=${DISTDIR} \
 		  WRKDIR=${WRKDIR} WRKSRC=${WRKSRC} PATCHDIR=${PATCHDIR} \
 		  SCRIPTDIR=${SCRIPTDIR} FILESDIR=${FILESDIR} \
+		  DFLY_PATCHDIR=${DFLY_PATCHDIR} \
+		  DFLY_FILESDIR=${DFLY_FILESDIR} \
 		  PORTSDIR=${PORTSDIR} PREFIX=${PREFIX} LOCALBASE=${LOCALBASE}
 
 .if defined(BATCH)
@@ -2850,7 +2895,7 @@ DESKTOPDIR?=		${PREFIX}/share/applicatio
 
 # Check the machine architectures
 .if defined(ONLY_FOR_ARCHS)
-.for __ARCH in ${ONLY_FOR_ARCHS}
+.for __ARCH in ${ONLY_FOR_ARCHS:S/amd64/x86_64/}
 .if ${ARCH:M${__ARCH}} != ""
 __ARCH_OK?=		1
 .endif
@@ -2860,7 +2905,7 @@ __ARCH_OK?=		1
 .endif
 
 .if defined(NOT_FOR_ARCHS)
-.for __NARCH in ${NOT_FOR_ARCHS}
+.for __NARCH in ${NOT_FOR_ARCHS:S/amd64/x86_64/}
 .if ${ARCH:M${__NARCH}} != ""
 .undef __ARCH_OK
 .endif
@@ -2869,9 +2914,9 @@ __ARCH_OK?=		1
 
 .if !defined(__ARCH_OK)
 .if defined(ONLY_FOR_ARCHS)
-IGNORE=		is only for ${ONLY_FOR_ARCHS},
+IGNORE=		is only for ${ONLY_FOR_ARCHS:S/amd64/x86_64/},
 .else # defined(NOT_FOR_ARCHS)
-IGNORE=		does not run on ${NOT_FOR_ARCHS},
+IGNORE=		does not run on ${NOT_FOR_ARCHS:S/amd64/x86_64/},
 .endif
 IGNORE+=	while you are running ${ARCH}
 
@@ -3005,6 +3050,7 @@ all:
 	  DISTDIR=${DISTDIR} WRKDIR=${WRKDIR} WRKSRC=${WRKSRC} \
 	  PATCHDIR=${PATCHDIR} SCRIPTDIR=${SCRIPTDIR} \
 	  FILESDIR=${FILESDIR} PORTSDIR=${PORTSDIR} PREFIX=${PREFIX} \
+	  DFLY_PATCHDIR=${DFLY_PATCHDIR} DFLY_FILESDIR=${DFLY_FILESDIR} \
 	  BUILD_DEPENDS="${BUILD_DEPENDS}" RUN_DEPENDS="${RUN_DEPENDS}" \
 	  CONFLICTS="${CONFLICTS}" \
 	${ALL_HOOK}
@@ -3336,9 +3382,26 @@ clean-wrkdir:
 .if !target(do-extract)
 do-extract:
 	@for file in ${EXTRACT_ONLY}; do \
-		if ! (cd ${WRKDIR} && ${EXTRACT_CMD} ${EXTRACT_BEFORE_ARGS} ${_DISTDIR}/$$file ${EXTRACT_AFTER_ARGS});\
-		then \
-			exit 1; \
+		if [ -n "${EXTRACT_CMD}" -a -z "${_INCLUDE_USES_ZIP_MK}" -a -z "${_INCLUDE_USES_LHA_MK}" ]; then \
+			if ! (cd ${WRKDIR} && ${EXTRACT_CMD} ${EXTRACT_BEFORE_ARGS} ${_DISTDIR}/$$file ${EXTRACT_AFTER_ARGS});\
+			then \
+				exit 1; \
+			fi; \
+		else \
+			case $${file} in \
+			*.tar|*.tbz|*.tgz|*.txz|*.tar.bz2|*.tar.gz|*.tar.lzma|*.tar.xz|*.tar.Z) \
+				if ! (cd ${WRKDIR} && ${TAR} ${TAR_BEFORE_ARGS} ${_DISTDIR}/$$file ${TAR_AFTER_ARGS}); \
+				then exit 1; fi; ;; \
+			*.lzh) \
+				if ! (cd ${WRKDIR} && ${LHA_CMD} ${LHA_BEFORE_ARGS} ${_DISTDIR}/$$file ${LHA_AFTER_ARGS}); \
+				then exit 1; fi; ;; \
+			*.zip|*.ZIP|*.xpi) \
+				if ! (cd ${WRKDIR} && ${ZIP_EXTRACT_CMD} ${ZIP_BEFORE_ARGS} ${_DISTDIR}/$$file ${ZIP_AFTER_ARGS}); \
+				then exit 1; fi; ;; \
+			*) \
+				if ! (cd ${WRKDIR} && ${TAR} ${EXTRACT_BEFORE_ARGS} ${_DISTDIR}/$$file ${EXTRA_AFTER_ARGS}); \
+				then exit 1; fi; ;; \
+			esac ; \
 		fi; \
 	done
 .if !defined(EXTRACT_PRESERVE_OWNERSHIP)
@@ -3393,7 +3456,7 @@ do-patch:
 	@set -e ;\
 	if [ -d ${PATCHDIR} ]; then \
 		if [ "`${ECHO_CMD} ${PATCHDIR}/patch-*`" != "${PATCHDIR}/patch-*" ]; then \
-			${ECHO_MSG} "===>  Applying ${OPSYS} patches for ${PKGNAME}" ; \
+			${ECHO_MSG} "===>  Applying ports patches for ${PKGNAME}" ; \
 			PATCHES_APPLIED="" ; \
 			for i in ${PATCHDIR}/patch-*; do \
 				case $$i in \
@@ -3418,6 +3481,33 @@ do-patch:
 			done; \
 		fi; \
 	fi
+	@set -e ; if [ -d ${DFLY_PATCHDIR} ]; then \
+		if [ "`${ECHO_CMD} ${DFLY_PATCHDIR}/patch-*`" != "${DFLY_PATCHDIR}/patch-*" ]; then \
+			${ECHO_MSG} "===>  Applying ${OPSYS} patches for ${PKGNAME}" ; \
+			PATCHES_APPLIED="" ; \
+			for i in ${DFLY_PATCHDIR}/patch-*; do \
+				case $$i in \
+					*.orig|*.rej|*~|*,v) \
+						${ECHO_MSG} "===>   Ignoring patchfile $$i" ; \
+						;; \
+					*) \
+						if [ ${PATCH_DEBUG_TMP} = yes ]; then \
+							${ECHO_MSG} "===>   Applying ${OPSYS} patch $$i" ; \
+						fi; \
+						if ${PATCH} ${PATCH_ARGS} < $$i ; then \
+							PATCHES_APPLIED="$$PATCHES_APPLIED $$i" ; \
+						else \
+							${ECHO_MSG} `${ECHO_CMD} "=> Patch $$i failed to apply cleanly." | ${SED} "s|${DFLY_PATCHDIR}/||"` ; \
+							if [ x"$$PATCHES_APPLIED" != x"" ]; then \
+								${ECHO_MSG} `${ECHO_CMD} "=> Patch(es) $$PATCHES_APPLIED applied cleanly." | ${SED} "s|${DFLY_PATCHDIR}/||g"` ; \
+							fi; \
+							${FALSE} ; \
+						fi; \
+						;; \
+				esac; \
+			done; \
+		fi; \
+	fi
 .endif
 
 .if !target(run-autotools-fixup)
@@ -4588,7 +4678,7 @@ ALL-DEPENDS-LIST= \
 				continue;				\
 			fi;						\
 			${ECHO_CMD} $$d;				\
-			if ! children=$$(cd $$d && ${MAKE} -V _DEPEND_DIRS); then\
+			if ! children=$$(cd $$d && ${MAKE} -V '$${_DEPEND_DIRS}'); then\
 				${ECHO_MSG} "${PKGNAME}: \"$$d\" erroneous -- dependency list incomplete" >&2; \
 				continue;				\
 			fi;						\
@@ -4657,7 +4747,7 @@ CLEAN-DEPENDS-LIMITED= \
 				${ECHO_MSG} "${PKGNAME}: \"$$d\" non-existent -- dependency list incomplete" >&2; \
 				continue;				\
 			fi;						\
-			if ! children=$$(cd $$d && ${MAKE} -V WRKDIR -V _DEPEND_DIRS); then \
+			if ! children=$$(cd $$d && ${MAKE} -V '$${WRKDIR}' -V '$${_DEPEND_DIRS}'); then \
 				${ECHO_MSG} "${PKGNAME}: \"$$d\" erroneous -- dependency list incomplete" >&2; \
 				continue;				\
 			fi;						\
@@ -4748,7 +4838,7 @@ FETCH_LIST?=	for i in $$deps; do \
 			else	\
 				continue;	\
 			fi;;	\
-		*) if [ -d ${PKG_DBDIR}/$$(cd $$dir; ${MAKE} -V PKGNAME) ]; then \
+		*) if [ -d ${PKG_DBDIR}/$$(cd $$dir; ${MAKE} -V '$${PKGNAME}') ]; then \
 				continue;	\
 			fi;;	\
 		esac;	\
@@ -5086,10 +5176,15 @@ _SUB_LIST_TEMP=	${SUB_LIST:S/$/!g/:S/^/
 apply-slist:
 .if defined(SUB_FILES)
 .for file in ${SUB_FILES}
-.if !exists(${FILESDIR}/${file}.in)
-	@${ECHO_MSG} "** Missing ${FILESDIR}/${file}.in for ${PKGNAME}."; exit 1
-.else
+.if exists(${FILESDIR}/${file}.in)
 	@${SED} ${_SUB_LIST_TEMP} -e '/^@comment /d' ${FILESDIR}/${file}.in > ${WRKDIR}/${file}
+.elif exists(${DFLY_FILESDIR}/${file}.in)
+	@${SED} ${_SUB_LIST_TEMP} -e '/^@comment /d' ${DFLY_FILESDIR}/${file}.in > ${WRKDIR}/${file}
+.else
+	@${ECHO_MSG} "** Checked ${FILESDIR}:"; \
+	@${ECHO_MSG} "** Checked ${DFLY_FILESDIR}:"; \
+	@${ECHO_MSG} "** Missing ${file}.in for ${PKGNAME}."; \
+	exit 1
 .endif
 .endfor
 .for i in pkg-message pkg-install pkg-deinstall pkg-req
@@ -5343,6 +5438,7 @@ tags:
 	OPSYS="${OPSYS:S/"/"'"'"/g:S/\$/\$\$/g:S/\\/\\\\/g}" \
 	OSREL="${OSREL:S/"/"'"'"/g:S/\$/\$\$/g:S/\\/\\\\/g}" \
 	OSVERSION="${OSVERSION:S/"/"'"'"/g:S/\$/\$\$/g:S/\\/\\\\/g}" \
+	DFLYVERSION="${DFLYVERSION:Q}" \
 	SYSTEMVERSION="${SYSTEMVERSION:S/"/"'"'"/g:S/\$/\$\$/g:S/\\/\\\\/g}"
 .endif
 
