--- Makefile.orig	2017-07-06 15:42:12 UTC
+++ Makefile
@@ -5,10 +5,12 @@ PORTVERSION=	${JDK_MAJOR_VERSION}.${JDK_
 CATEGORIES=	java devel
 MASTER_SITES=	http://download.java.net/openjdk/jdk${JDK_MAJOR_VERSION}/promoted/b${DIST_BUILD_NUMBER}/:jdk \
 		https://adopt-openjdk.ci.cloudbees.com/job/jtreg/${JTREG_JENKINS_BUILD}/artifact/:jtreg \
+		http://dl.wolfpond.org/openjdk8/:bootstrap \
+		http://leaf.dragonflybsd.org/~marino/dports-src/:bootstrap \
 		LOCAL/jkim:jdk,jtreg
 PKGNAMESUFFIX?=	${JDK_MAJOR_VERSION}
 DISTNAME=	${PORTNAME}-${JDK_MAJOR_VERSION}-src-b${DIST_BUILD_NUMBER}-03_mar_2014
-DISTFILES=	${DISTNAME}.zip:jdk
+DISTFILES=	${DISTNAME}.zip:jdk ${BOOTSTRAP_DISTFILE}
 
 PATCH_SITES=	LOCAL/glewis/openjdk8
 PATCHFILES=	patch-8u05-b13.xz \
@@ -197,7 +199,7 @@ SHEBANG_FILES=	configure
 _MAKE_JOBS=	#
 CPPFLAGS+=	-I${LOCALBASE}/include
 LDFLAGS+=	-L${LOCALBASE}/lib
-MAKE_ENV=	CLASSPATH="" JAVA_HOME="" LD_LIBRARY_PATH=""
+MAKE_ENV=	CLASSPATH="" JAVA_HOME=""
 MAKE_ENV+=	IGNORE_OLD_CONFIG=true
 MAKE_ENV+=	COMPILER_WARNINGS_FATAL="false"
 # openjdk8 normally sets X_CFLAGS in the ./configure script, but it won't do
@@ -213,7 +215,7 @@ JRE_IMAGEDIR=	${JDK_BUILDDIR}/images/j2s
 .else
 JRE_IMAGEDIR=	${JDK_BUILDDIR}/images/j2re-image
 .endif
-JDK_JVMDIR=	lib/${ARCH:C/armv6.*/arm/:S/powerpc64/ppc64/}
+JDK_JVMDIR=	lib/${ARCH:S/x86_64/amd64/:C/armv6.*/arm/:S/powerpc64/ppc64/}
 JDK_OSARCH=	bsd-${ARCH:S/amd64/x86_64/:C/armv6.*/arm/:S/i386/x86/:S/powerpc64/ppc64/}
 INSTALLDIR=	${PREFIX}/${PKGBASE}
 
@@ -255,7 +257,7 @@ CONFIGURE_WRKSRC=	${WRKSRC}/common/autoc
 
 OPTIONS_DEFINE=		ALSA POLICY TZUPDATE X11
 OPTIONS_DEFINE_armv6=	FPUHACK
-OPTIONS_DEFAULT=	ALSA POLICY TZUPDATE X11
+OPTIONS_DEFAULT=	POLICY TZUPDATE X11
 OPTIONS_DEFAULT_armv6=	FPUHACK
 FPUHACK_DESC=		Hack denormalized numbers in flush-to-zero mode
 POLICY_DESC=		Install the Unlimited Strength Policy Files
@@ -267,20 +269,21 @@ TZUPDATE_RUN_DEPENDS=	java-zoneinfo>0:ja
 
 JAVAVMS_COMMENT=	OpenJDK${JDK_MAJOR_VERSION}
 
+ALSA_LIB_DEPENDS=	libasound.so:audio/alsa-lib
+ALSA_CONFIGURE_ON=	--with-alsa=${LOCALBASE}
+ALSA_CONFIGURE_ENV_OFF=	ALSA_NOT_NEEDED=yes
+
 .if !defined(BUILD_JRE)
 OPTIONS_DEFINE+=	TEST
-OPTIONS_DEFAULT+=	RELEASE
+OPTIONS_DEFAULT+=	RELEASE ALSA
 OPTIONS_SINGLE=		BUILD
 OPTIONS_SINGLE_BUILD=	DEBUG DEBUGFAST RELEASE
 BUILD_DESC=		Select OpenJDK build type
 DEBUG_DESC=		Build for debugging (without optimizations)
 DEBUGFAST_DESC=		Build for debugging (with optimizations)
 RELEASE_DESC=		Build for release (default)
-TEST_DESC=		Run regression tests
 
-ALSA_LIB_DEPENDS=	libasound.so:audio/alsa-lib
-ALSA_CONFIGURE_ON=	--with-alsa=${LOCALBASE}
-ALSA_CONFIGURE_ENV_OFF=	ALSA_NOT_NEEDED=yes
+TEST_DESC=		Run regression tests
 DEBUG_VARS=		JDK_BUILD_TYPE=slowdebug
 DEBUGFAST_VARS=		JDK_BUILD_TYPE=fastdebug
 RELEASE_BUILD_DEPENDS_OFF=	${LOCALBASE}/bin/objcopy:devel/binutils
@@ -347,8 +350,15 @@ BOOTSTRAPJDKDIR=	${BJDK}
 BOOTSTRAPJDKDIR?=	${LOCALBASE}/bootstrap-openjdk
 BUILD_DEPENDS+=		${BOOTSTRAPJDKDIR}/bin/javac:java/bootstrap-openjdk
 .  else
+.    if ${OSREL:S/.//} < 41
 BOOTSTRAPJDKDIR?=	${LOCALBASE}/openjdk7
 BUILD_DEPENDS+=		${BOOTSTRAPJDKDIR}/bin/javac:java/openjdk7
+MAKE_ENV+=		LD_LIBRARY_PATH=""
+.    else
+BOOTSTRAPJDKDIR=	${WRKDIR}/bootstrap
+BOOTSTRAP_DISTFILE=	bootstrap-openjdk8-8.40.25.tar.xz:bootstrap
+MAKE_ENV+=		LD_LIBRARY_PATH="${BOOTSTRAPJDKDIR}/jre/lib/amd64"
+.    endif
 .  endif
 .endif
 
@@ -454,6 +464,7 @@ do-install:
 	${FIND} bin jre/bin -type f -exec ${CHMOD} ${BINMODE} {} \; && \
 	${CHMOD} ${BINMODE} jre/${JDK_JVMDIR}/jexec \
 	    jre/${JDK_JVMDIR}/jspawnhelper ${JDK_JVMDIR}/jexec
+	cd ${STAGEDIR}${INSTALLDIR}/include && ln -s dragonfly freebsd
 	@${ECHO} "@dir ${INSTALLDIR}/jre/lib/applet" >> ${TMPPLIST}
 .else
 	@cd ${JRE_IMAGEDIR} && ${COPYTREE_SHARE} . ${STAGEDIR}${INSTALLDIR}
