--- platform/FreeBSD/platform.h	2012-02-21 15:46:14.000000000 -0500
+++ platform/FreeBSD/platform.h	2014-10-06 15:56:15.000000000 -0400
@@ -5,7 +5,6 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/time.h>
-#include <sys/dkstat.h>
 #include <sys/param.h>
 #include <sys/resource.h>
 
--- platform/FreeBSD/sm_cpu.c	2009-06-28 14:40:29.000000000 -0400
+++ platform/FreeBSD/sm_cpu.c	2014-10-06 15:56:15.000000000 -0400
@@ -42,7 +42,7 @@
 #include "conf.h"
 
 #include <sys/param.h>
-#include <sys/dkstat.h>
+#include <sys/resource.h>
 #include <sys/sysctl.h>
 
 #include "error.h"
--- platform/FreeBSD/sm_proc.c	2009-06-28 14:40:29.000000000 -0400
+++ platform/FreeBSD/sm_proc.c	2014-10-09 08:29:04.000000000 -0400
@@ -205,20 +205,20 @@
                                     pp->ki_ssize); /* stack */
             mem_rss += pagetob(pp->ki_rssize);     /* rss  */
 #else
-        if (strncmp(st->arg, pp->kp_proc.p_comm, strlen(st->arg)) == 0) {
+        if (strncmp(st->arg, pp->kp_comm, strlen(st->arg)) == 0) {
             /* cpu time - accumulated */
-            cpu_uticks += pp->kp_proc.p_uticks;  /* user */
-            cpu_sticks += pp->kp_proc.p_sticks;  /* sys  */
-            cpu_iticks += pp->kp_proc.p_iticks;  /* int  */
+            cpu_uticks += pp->kp_lwp.kl_uticks;  /* user */
+            cpu_sticks += pp->kp_lwp.kl_sticks;  /* sys  */
+            cpu_iticks += pp->kp_lwp.kl_iticks;  /* int  */
 
             /* cpu time - percentage since last measurement */
-            cpu_pct = pctdouble(pp->kp_proc.p_pctcpu) * 100.0;
+            cpu_pct = pctdouble(pp->kp_lwp.kl_pctcpu) * 100.0;
             cpu_pcti += cpu_pct;
             /* memory size - shared pages are counted multiple times */
-            mem_procsize += pagetob(pp->kp_eproc.e_vm.vm_tsize + /* text pages */
-                                    pp->kp_eproc.e_vm.vm_dsize + /* data */
-                                    pp->kp_eproc.e_vm.vm_ssize); /* stack */
-            mem_rss += pagetob(pp->kp_eproc.e_vm.vm_rssize);     /* rss  */
+            mem_procsize += pagetob(pp->kp_vm_tsize + /* text pages */
+                                    pp->kp_vm_dsize + /* data */
+                                    pp->kp_vm_ssize); /* stack */
+            mem_rss += pagetob(pp->kp_vm_rssize);     /* rss  */
 #endif
             n++;
         }
