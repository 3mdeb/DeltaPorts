--- gdb/amd64-tdep.h.orig
+++ gdb/amd64-tdep.h
@@ -126,4 +126,9 @@ extern CORE_ADDR amd64fbsd_sigtramp_start_addr;
 extern CORE_ADDR amd64fbsd_sigtramp_end_addr;
 extern int amd64fbsd_sc_reg_offset[];
 
+/* Variables exported from amd64dfly-tdep.c.  */
+extern CORE_ADDR amd64dfly_sigtramp_start_addr;
+extern CORE_ADDR amd64dfly_sigtramp_end_addr;
+extern int amd64dfly_sc_reg_offset[];
+
 #endif /* amd64-tdep.h */
--- gdb/common/ptid.h.orig
+++ gdb/common/ptid.h
@@ -47,7 +47,7 @@ struct ptid
     long lwp;
 
     /* Thread id */
-    long tid;
+    unsigned long tid;
   };
 
 typedef struct ptid ptid_t;
--- gdb/configure.host.orig
+++ gdb/configure.host
@@ -92,6 +92,7 @@ i[34567]86-*-freebsd* | i[34567]86-*-kfreebsd*-gnu)
 i[34567]86-*-netbsdelf* | i[34567]86-*-knetbsd*-gnu)
 			gdb_host=nbsdelf ;;
 i[34567]86-*-netbsd*)	gdb_host=nbsdaout ;;
+i[34567]86-*-dragonfly*) gdb_host=dfly ;;
 i[34567]86-*-go32*)	gdb_host=go32 ;;
 i[34567]86-*-mingw32*)	gdb_host=mingw
 			gdb_host_obs=mingw-hdep.o
@@ -179,6 +180,7 @@ x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
 x86_64-*-netbsd* | x86_64-*-knetbsd*-gnu)
 			gdb_host=nbsd64 ;;
 x86_64-*-openbsd*)	gdb_host=obsd64 ;;
+x86_64-*-dragonfly*)	gdb_host=dfly64 ;;
 x86_64-*-mingw*)        gdb_host=mingw64
 			gdb_host_obs=mingw-hdep.o
 			;;
--- gdb/configure.tgt
+++ gdb/configure.tgt
@@ -200,6 +200,11 @@ i[34567]86-*-openbsd*)
 	gdb_target_obs="i386-tdep.o i387-tdep.o i386bsd-tdep.o i386obsd-tdep.o \
 			bsd-uthread.o solib-svr4.o"
 	;;
+i[34567]86-*-dragonfly*)
+	# Target: DragonFly/i386
+	gdb_target_obs="i386-tdep.o i387-tdep.o i386bsd-tdep.o i386fbsd-tdep.o \
+			i386dfly-tdep.o bsd-uthread.o corelow.o solib.o solib-svr4.o"
+	;;
 i[34567]86-*-nto*)
 	# Target: Intel 386 running qnx6.
 	gdb_target_obs="i386-tdep.o i387-tdep.o solib-svr4.o \
@@ -670,6 +675,12 @@ x86_64-*-openbsd*)
 			i387-tdep.o i386bsd-tdep.o i386obsd-tdep.o \
 			bsd-uthread.o solib-svr4.o"
 	;;
+x86_64-*-dragonfly*)
+	# Target: DragonFly/amd64
+	gdb_target_obs="amd64-tdep.o amd64dfly-tdep.o i386-tdep.o \
+			i387-tdep.o i386bsd-tdep.o i386fbsd-tdep.o i386dfly-tdep.o \
+			i386dfly-tdep.o bsd-uthread.o corelow.o solib.o solib-svr4.o"
+	;;
 xtensa*-*-linux*)	gdb_target=linux
 	# Target: GNU/Linux Xtensa
 	gdb_target_obs="xtensa-tdep.o xtensa-config.o xtensa-linux-tdep.o \
@@ -693,6 +704,7 @@ case "${targ}" in
 *-*-nto*)	gdb_osabi=GDB_OSABI_QNXNTO ;;
 m68*-*-openbsd* | m88*-*-openbsd* | vax-*-openbsd*) ;;
 *-*-openbsd*)	gdb_osabi=GDB_OSABI_OPENBSD_ELF ;;
+*-*-dragonfly*)	gdb_osabi=GDB_OSABI_DRAGONFLY ;;
 *-*-solaris*)	gdb_osabi=GDB_OSABI_SOLARIS ;;
 *-*-*-gnu*)	;; # prevent non-GNU kernels to match the Hurd rule below
 *-*-gnu*)	gdb_osabi=GDB_OSABI_HURD ;;
--- gdb/defs.h.orig
+++ gdb/defs.h
@@ -26,7 +26,7 @@
 #endif
 
 #include "config.h"		/* Generated by configure.  */
-#include "build-gnulib/config.h"
+#include "libgnu/config.h"
 
 #include <sys/types.h>
 #include <stdio.h>
@@ -583,6 +583,7 @@ enum gdb_osabi
   GDB_OSABI_NETBSD_AOUT,
   GDB_OSABI_NETBSD_ELF,
   GDB_OSABI_OPENBSD_ELF,
+  GDB_OSABI_DRAGONFLY,
   GDB_OSABI_WINCE,
   GDB_OSABI_GO32,
   GDB_OSABI_IRIX,
@@ -793,6 +794,9 @@ extern int use_windows;
 extern void initialize_progspace (void);
 extern void initialize_inferiors (void);
 
+/* For DragonFly kgdb */
+extern int kernel_debugger;
+
 /* Special block numbers */
 
 enum block_enum
--- gdb/exec.c.orig
+++ gdb/exec.c
@@ -406,6 +406,9 @@ resize_section_table (struct target_section_table *table, int num_added)
 
   old_count = table->sections_end - table->sections;
 
+  if (!num_added)
+    return old_count;
+
   new_count = num_added + old_count;
 
   if (new_count)
--- gdb/i386-tdep.h.orig
+++ gdb/i386-tdep.h
@@ -391,6 +391,9 @@ extern CORE_ADDR i386fbsd_sigtramp_start_addr;
 extern CORE_ADDR i386fbsd_sigtramp_end_addr;
 extern CORE_ADDR i386obsd_sigtramp_start_addr;
 extern CORE_ADDR i386obsd_sigtramp_end_addr;
+extern CORE_ADDR i386dfly_sigtramp_start_addr;
+extern CORE_ADDR i386dfly_sigtramp_end_addr;
+extern int i386dfly_sc_reg_offset[];
 extern int i386fbsd4_sc_reg_offset[];
 extern int i386fbsd_sc_reg_offset[];
 extern int i386nbsd_sc_reg_offset[];
--- gdb/i386bsd-nat.c.orig
+++ gdb/i386bsd-nat.c
@@ -353,6 +353,8 @@ _initialize_i386bsd_nat (void)
 #define SC_REG_OFFSET i386nbsd_sc_reg_offset
 #elif defined (OpenBSD)
 #define SC_REG_OFFSET i386obsd_sc_reg_offset
+#elif defined (DragonFly)
+#define SC_REG_OFFSET i386dfly_sc_reg_offset
 #endif
 
 #ifdef SC_REG_OFFSET
--- gdb/i386fbsd-tdep.c.orig
+++ gdb/i386fbsd-tdep.c
@@ -201,7 +201,7 @@ int i386fbsd4_sc_reg_offset[] =
   20 + 0 * 4			/* %gs */
 };
 
-static void
+void
 i386fbsd4_init_abi (struct gdbarch_info info, struct gdbarch *gdbarch)
 {
   struct gdbarch_tdep *tdep = gdbarch_tdep (gdbarch);
--- gdb/inferior.c.orig
+++ gdb/inferior.c
@@ -358,7 +358,7 @@ find_inferior_pid (int pid)
   /* Looking for inferior pid == 0 is always wrong, and indicative of
      a bug somewhere else.  There may be more than one with pid == 0,
      for instance.  */
-  gdb_assert (pid != 0);
+  gdb_assert (kernel_debugger || pid != 0);
 
   for (inf = inferior_list; inf; inf = inf->next)
     if (inf->pid == pid)
@@ -525,7 +525,7 @@ number_of_inferiors (void)
 static char *
 inferior_pid_to_str (int pid)
 {
-  if (pid != 0)
+  if (kernel_debugger || pid != 0)
     return target_pid_to_str (pid_to_ptid (pid));
   else
     return _("<null>");
--- gdb/main.c.orig
+++ gdb/main.c
@@ -96,6 +96,9 @@ int return_child_result_value = -1;
 /* GDB as it has been invoked from the command line (i.e. argv[0]).  */
 static char *gdb_program_name;
 
+/* DragonFly kgdb support */
+int kernel_debugger;
+
 static void print_gdb_help (struct ui_file *);
 
 /* Relocate a file or directory.  PROGNAME is the name by which gdb
@@ -441,6 +444,7 @@ captured_main (void *data)
       OPT_ANNOTATE,
       OPT_STATISTICS,
       OPT_TUI,
+      OPT_KGDB,
       OPT_NOWINDOWS,
       OPT_WINDOWS,
       OPT_IX,
@@ -468,6 +472,7 @@ captured_main (void *data)
       {"fullname", no_argument, 0, 'f'},
       {"f", no_argument, 0, 'f'},
 
+      {"kernel", no_argument, 0, OPT_KGDB},
       {"annotate", required_argument, 0, OPT_ANNOTATE},
       {"help", no_argument, &print_help, 1},
       {"se", required_argument, 0, OPT_SE},
@@ -561,6 +566,9 @@ captured_main (void *data)
 	    exit (1);
 #endif
 	    break;
+	  case OPT_KGDB:
+	    kernel_debugger = 1;
+	    break;
 	  case OPT_WINDOWS:
 	    /* FIXME: cagney/2003-03-01: Not sure if this option is
                actually useful, and if it is, what it should do.  */
@@ -1046,6 +1054,7 @@ captured_main (void *data)
 int
 gdb_main (struct captured_main_args *args)
 {
+  kernel_debugger = 0;
   use_windows = args->use_windows;
   catch_errors (captured_main, args, "", RETURN_MASK_ALL);
   /* The only way to end up here is by an error (normal exit is
--- gdb/osabi.c.orig
+++ gdb/osabi.c
@@ -60,6 +60,7 @@ static const char * const gdb_osabi_names[] =
   "NetBSD a.out",
   "NetBSD ELF",
   "OpenBSD ELF",
+  "DragonFly",
   "Windows CE",
   "DJGPP",
   "Irix",
@@ -490,6 +491,15 @@ generic_elf_osabi_sniff_abi_tag_sections (bfd *abfd, asection *sect, void *obj)
 	  return;
 	}
 
+      /* DragonFly.  */
+      if (check_note (abfd, sect, note, &sectsize, "DragonFly", 4,
+		      NT_DRAGONFLY_ABI_TAG))
+	{
+	  /* There is no need to check the version yet.  */
+	  *osabi = GDB_OSABI_DRAGONFLY;
+	  return;
+	}
+
       return;
     }
       
--- gdb/remote.c.orig
+++ gdb/remote.c
@@ -5623,7 +5623,7 @@ Packet: '%s'\n"),
 	  {
 	    p++;
 
-	    if (p == '\0')
+	    if (*p == '\0')
 	      ;
 	    else if (strncmp (p,
 			      "process:", sizeof ("process:") - 1) == 0)
--- include/elf/common.h.orig
+++ include/elf/common.h
@@ -629,6 +629,10 @@
 
 #define NT_FREEBSD_ABI_TAG	1
 
+/* Values for DragonFly .note.ABI-tag notes.  Note name is "DragonFly".  */
+
+#define NT_DRAGONFLY_ABI_TAG	1
+
 /* These three macros disassemble and assemble a symbol table st_info field,
    which contains the symbol binding and symbol type.  The STB_ and STT_
    defines identify the binding and type.  */
--- include/libiberty.h.orig
+++ include/libiberty.h
@@ -106,7 +106,7 @@ extern int countargv (char**);
    to find the declaration so provide a fully prototyped one.  If it
    is 1, we found it so don't provide any declaration at all.  */
 #if !HAVE_DECL_BASENAME
-#if defined (__GNU_LIBRARY__ ) || defined (__linux__) || defined (__FreeBSD__) || defined (__OpenBSD__) || defined(__NetBSD__) || defined (__CYGWIN__) || defined (__CYGWIN32__) || defined (__MINGW32__) || defined (HAVE_DECL_BASENAME)
+#if defined (__GNU_LIBRARY__ ) || defined (__linux__) || defined (__FreeBSD__) || defined (__OpenBSD__) || defined(__NetBSD__) || defined(__DragonFly__) || defined (__CYGWIN__) || defined (__CYGWIN32__) || defined (__MINGW32__) || defined (HAVE_DECL_BASENAME)
 extern char *basename (const char *);
 #else
 /* Do not allow basename to be used if there is no prototype seen.  We
--- readline/search.c.orig
+++ readline/search.c
@@ -210,7 +210,7 @@ _rl_nsearch_init (dir, pchar)
   rl_end = rl_point = 0;
 
   p = _rl_make_prompt_for_search (pchar ? pchar : ':');
-  rl_message ("%s", p, 0);
+  rl_message ("%s", p);
   xfree (p);
 
   RL_SETSTATE(RL_STATE_NSEARCH);
