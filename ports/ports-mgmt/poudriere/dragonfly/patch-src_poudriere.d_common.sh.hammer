--- /dev/null	2012-11-18 03:01:18.555344164 +0100
+++ src/poudriere.d/common.sh.hammer	2012-11-18 11:33:29.000000000 +0100
@@ -0,0 +1,275 @@
+#!/bin/sh
+
+zget() {
+	[ $# -ne 1 ] && eargs property
+	local name=`basename ${JAILFS}`
+	local confloc=${POUDRIERE_DATA}/nozfs/jails/${name}/${1}
+	if [ -f ${confloc} ]; then
+	   cat ${confloc}
+	else
+	   echo "-"
+}
+
+zset() {
+	[ $# -ne 2 ] && eargs property value
+	local name=`basename ${JAILFS}`
+	local confdir=${POUDRIERE_DATA}/nozfs/jails/${name}
+	[ -d ${confdir} ] && echo "$2" > ${confdir}/${1}
+}
+
+pzget() {
+	[ $# -ne 1 ] && eargs property
+	local name=`basename ${PTFS}`
+	local confloc=${POUDRIERE_DATA}/nozfs/ports/${name}/${1}
+	if [ -f ${confloc} ]; then
+	   cat ${confloc}
+	else
+	   echo "-"
+}
+
+pzset() {
+	[ $# -ne 2 ] && eargs property value
+	local name=`basename ${PTFS}`
+	local confdir=${POUDRIERE_DATA}/nozfs/ports/${name}
+	[ -d ${confdir} ] && echo "$2" > ${confdir}/${1}
+}
+
+zsnap() {
+#	[ $# -ne 1 ] && eargs filesystem@snapname
+#	zfs snapshot ${1}
+}
+
+zkill() {
+#	[ $# -ne 1 ] && eargs filesystem@snapname
+#	zfs destroy -r ${1}
+}
+
+zrollback () {
+#	[ $# -ne 1 ] && eargs filesystem@snapname
+#	zfs rollback -R ${1}
+}
+
+zdiff () {
+#	[ $# -ne 2 ] && eargs filesystem@snapname filesystem
+#	zfs diff -FH ${1} ${2}
+}
+
+jail_exists() {
+	[ $# -ne 1 ] && eargs jailname
+	if [ -d ${BASEFS}/jails/${1} ] && \
+	   [ -d ${POUDRIERE_DATA}/nozfs/jails/${1} ]; then
+	    return 0;
+	fi
+	return 1
+}
+
+jail_get_base() {
+	[ $# -ne 1 ] && eargs jailname
+	local confloc=${POUDRIERE_DATA}/nozfs/jails/${1}/mountpoint
+	[ -f ${confloc} ] && cat ${confloc}
+}
+
+jail_get_version() {
+	[ $# -ne 1 ] && eargs jailname
+	local confloc=${POUDRIERE_DATA}/nozfs/jails/${1}/version
+	[ -f ${confloc} ] && cat ${confloc}
+}
+
+jail_get_fs() {
+	[ $# -ne 1 ] && eargs jailname
+	local confloc=${POUDRIERE_DATA}/nozfs/jails/${1}/filesys
+	[ -f ${confloc} ] && cat ${confloc}
+}
+
+port_exists() {
+	[ $# -ne 1 ] && eargs portstree_name
+	if [ -d ${BASEFS}/ports/${1} ] && \
+	   [ -d ${POUDRIERE_DATA}/nozfs/ports/${1} ]; then
+	    return 0;
+	fi
+	return 1
+}
+
+port_get_base() {
+	[ $# -ne 1 ] && eargs portstree_name
+	local confloc=${POUDRIERE_DATA}/nozfs/ports/${1}/mountpoint
+	[ -f ${confloc} ] && cat ${confloc}
+}
+
+port_get_fs() {
+	[ $# -ne 1 ] && eargs portstree_name
+	local confloc=${POUDRIERE_DATA}/nozfs/ports/${1}/filesys
+	[ -f ${confloc} ] && cat ${confloc}
+}
+
+get_data_dir() {
+	if [ -n "${POUDRIERE_DATA}" ]; then
+		echo ${POUDRIERE_DATA}
+	else
+		echo ${BASEFS}/data
+	fi
+}
+
+jail_create_zfs() {
+	[ $# -ne 5 ] && eargs name version arch mountpoint fs
+	local name=$1
+	local version=$2
+	local arch=$3
+	local mnt=$( echo $4 | sed -e "s,//,/,g")
+	local fs=$5
+	local confdir="${POUDRIERE_DATA}/nozfs/jails/${name}"
+	msg_n "Creating ${name} fs..."
+
+	if [ -d ${fs} ] || mkdir -p ${fs} || mkdir -p ${confdir}; then
+	   err 1 " Fail"
+	   return
+	fi
+
+	echo "rootfs"     > ${confdir}/type
+	echo "${name}"    > ${confdir}/name
+	echo "${version}" > ${confdir}/version
+	echo "${arch}"    > ${confdir}/arch
+	echo "${mnt}"     > ${confdir}/mountpoint
+	echo "${fs}"      > ${confdir}/filesys
+
+	echo " done"
+}
+
+port_create_zfs() {
+	[ $# -ne 3 ] && eargs name mountpoint fs
+	local name=$1
+	local mnt=$( echo $2 | sed -e 's,//,/,g')
+	local fs=$3
+	local confdir="${POUDRIERE_DATA}/nozfs/ports/${name}"
+	msg_n "Creating ${name} fs..."
+
+	if [ -d ${fs} ] || mkdir -p ${fs} || mkdir -p ${confdir}; then
+	   err 1 " Fail"
+	   return
+	fi
+
+	echo "ports"	> ${confdir}/type
+	echo "${name}"	> ${confdir}/name
+	echo "${mnt}"	> ${confdir}/mountpoint
+	echo "${fs}"	> ${confdir}/filesys
+
+	echo " done"
+}
+
+start_builders() {
+	local arch=$(zget arch)
+	local version=$(zget version)
+	local j mnt fs name
+
+	zfs create -o canmount=off ${JAILFS}/build
+
+	for j in ${JOBS}; do
+		mnt="${JAILMNT}/build/${j}"
+		fs="${JAILFS}/build/${j}"
+		name="${JAILNAME}-job-${j}"
+		zset status "starting_jobs:${j}"
+		mkdir -p "${mnt}"
+		zfs clone -o mountpoint=${mnt} \
+			-o ${NS}:name=${name} \
+			-o ${NS}:type=rootfs \
+			-o ${NS}:arch=${arch} \
+			-o ${NS}:version=${version} \
+			${JAILFS}@prepkg ${fs}
+		zsnap ${fs}@prepkg
+		# Jail might be lingering from previous build. Already recursively
+		# destroyed all the builder datasets, so just try stopping the jail
+		# and ignore any errors
+		jail -r ${name} >/dev/null 2>&1 || :
+		MASTERMNT=${JAILMNT} JAILNAME=${name} JAILMNT=${mnt} JAILFS=${fs} do_jail_mounts 0
+		MASTERMNT=${JAILMNT} JAILNAME=${name} JAILMNT=${mnt} JAILFS=${fs} do_portbuild_mounts 0
+		MASTERMNT=${JAILMNT} JAILNAME=${name} JAILMNT=${mnt} JAILFS=${fs} jrun 0
+		JAILFS=${fs} zset status "idle:"
+	done
+}
+
+stop_builders() {
+	local j mnt
+
+	# wait for the last running processes
+	cat ${JAILMNT}/poudriere/var/run/*.pid 2>/dev/null | xargs pwait 2>/dev/null
+
+	msg "Stopping ${PARALLEL_JOBS} builders"
+
+	for j in ${JOBS}; do
+		jail -r ${JAILNAME}-job-${j} >/dev/null 2>&1 || :
+	done
+
+	mnt=`realpath ${JAILMNT}`
+	mount | awk -v mnt="${mnt}/build/" 'BEGIN{ gsub(/\//, "\\\/", mnt); } { if ($3 ~ mnt && $1 !~ /\/dev\/md/ ) { print $3 }}' |  sort -r | xargs umount -f 2>/dev/null || :
+
+	zkill ${JAILFS}/build 2>/dev/null || :
+
+	# No builders running, unset JOBS
+	JOBS=""
+}
+
+post_conf_check () {
+	# NoZFS starts with ZROOTFS value, set ZPOOL to null
+	ZPOOL=
+}
+
+print_ports_table () {
+	TABFORM="'%-20s %-10s\n'"
+	printf ${TABFORM} "PORTSTREE" "METHOD"
+	local METHOD
+	local confdir=${POUDRIERE_DATA}/nozfs/ports
+	if [ -d ${confdir} ] && [ -n $(ls -A ${confdir}) ]; then
+	  cd ${confloc}
+	  PORTLIST=`find -s * -type d`
+	  for port in ${PORTLIST}; do
+	    if [ -f ${confdir}/${port}/method ];
+	      METHOD=`cat ${confdir}/${port}/method`
+	    else
+	      METHOD=-
+	    fi
+	    print ${TABFORM} "${port}" "${METHOD}"
+	  done
+	fi
+}
+
+print_jails_table () {
+	local confdir=${POUDRIERE_DATA}/nozfs/jails
+	TABFORM="'%-20s %-20s %-7s %-7s %-7s %-7s %-7s %-7s %-7s %s\n'"
+	printf ${TABFORM} "JAILNAME" "VERSION" "ARCH" "METHOD" "SUCCESS" \
+	                  "FAILED" "IGNORED" "SKIPPED" "QUEUED" "STATUS"
+	PARAMS=name version arch method stats_built stats_failed \
+	       stats_ignored stats_skipped stats_queued status
+	if [ -d ${confdir} ] && [ -n $(ls -A ${confdir}) ]; then
+	  cd ${confdir}
+	  JAILLIST=`find -s * -type d`
+	  for jail in ${JAILLIST}; do
+	    COLCNT=0
+	    for param in PARAMS; do
+	      if [ -f ${confdir}/${jail}/${param} ]
+	        eval "val_${COLCNT}=`cat ${confdir}/${jail}/${param}`"
+	      else
+	        eval "val_${COLCNT}=-"
+	      fi
+	      COLCNT=`expr ${COLCNT} + 1`
+	    done
+	    printf ${TABFORM} "${val_0}" "${val_1}" "${val_2}" "${val_3}" \
+			      "${val_4}" "${val_5}" "${val_6}" "${val_7}" \
+			      "${val_8}" "${val_9}"
+	  done
+	fi
+}
+
+list_jail_info () {
+	[ $# -ne 2 ] && eargs num_queued num_to_build
+	echo "Jailname: $(zget name)"
+	echo "BSD version: $(zget version)"
+	echo "BSD arch: $(zget arch)"
+	echo "Install/update method: $(zget method)"
+	echo "Status: $(zget status)"
+	echo "Packages built: $(zget stats_built)"
+	echo "Packages failed: $(zget stats_failed)"
+	echo "Packages ignored: $(zget stats_ignored)"
+	echo "Packages skipped: $(zget stats_skipped)"
+	echo "Packages queued: ${1}"
+	echo "Packages to be built: ${2}"
+}
\ No newline at end of file
