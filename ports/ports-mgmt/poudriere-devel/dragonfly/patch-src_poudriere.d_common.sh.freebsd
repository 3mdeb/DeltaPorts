--- /dev/null	2012-12-01 08:59:54.020291688 +0100
+++ src/poudriere.d/common.sh.freebsd	2012-12-01 12:58:35.000000000 +0100
@@ -0,0 +1,130 @@
+#!/bin/sh
+#
+# FreeBSD specific
+
+IPS="$(sysctl -n kern.features.inet 2>/dev/null || (sysctl -n net.inet 1>/dev/null 2>&1 && echo 1) || echo 0)$(sysctl -n kern.features.inet6 2>/dev/null || (sysctl -n net.inet6 1>/dev/null 2>&1 && echo 1) || echo 0)"
+
+
+jrun() {
+	[ $# -ne 1 ] && eargs network
+	local network=$1
+	local ipargs
+	if [ ${network} -eq 0 ]; then
+		case $IPS in
+		01) ipargs="ip6.addr=::1" ;;
+		10) ipargs="ip4.addr=127.0.0.1" ;;
+		11) ipargs="ip4.addr=127.0.0.1 ip6.addr=::1" ;;
+		esac
+	else
+		case $IPS in
+		01) ipargs="ip6=inherit" ;;
+		10) ipargs="ip4=inherit" ;;
+		11) ipargs="ip4=inherit ip6=inherit" ;;
+		esac
+	fi
+	jail -c persist name=${JAILNAME} ${ipargs} path=${JAILMNT} \
+		host.hostname=${JAILNAME} allow.sysvipc allow.mount \
+		allow.socket_af allow.raw_sockets allow.chflags
+}
+
+injail() {
+	jexec -U root ${JAILNAME} $@
+}
+
+jail_runs() {
+	[ $# -ne 0 ] && eargs
+	jls -qj ${JAILNAME} name > /dev/null 2>&1 && return 0
+	return 1
+}
+
+jail_soft_stop() {
+	jail -r ${1} > /dev/null
+}
+
+jail_start() {
+	[ $# -ne 0 ] && eargs
+	local arch=$(zget arch)
+	local NEEDFS="${NULLFSREF} procfs"
+	if [ -z "${NOLINUX}" ]; then
+		if [ "${arch}" = "i386" -o "${arch}" = "amd64" ]; then
+			NEEDFS="${NEEDFS} linprocfs linsysfs"
+			sysctl -n compat.linux.osrelease >/dev/null 2>&1 || kldload linux
+		fi
+	fi
+	[ -n "${USE_TMPFS}" ] && NEEDFS="${NEEDFS} tmpfs"
+	for fs in ${NEEDFS}; do
+		lsvfs $fs >/dev/null 2>&1 || kldload $fs
+	done
+	jail_exists ${JAILNAME} || err 1 "No such jail: ${JAILNAME}"
+	jail_runs && err 1 "jail already running: ${JAILNAME}"
+	zset status "start:"
+	zdelete ${JAILFS} build 2>/dev/null || :
+	zrollback ${JAILFS}@clean
+
+	msg "Mounting system devices for ${JAILNAME}"
+	do_jail_mounts 1
+
+	test -n "${RESOLV_CONF}" && cp -v "${RESOLV_CONF}" "${JAILMNT}/etc/"
+	msg "Starting jail ${JAILNAME}"
+	jrun 0
+	# Only set STATUS=1 if not turned off
+	# jail -s should not do this or jail will stop on EXIT
+	[ ${SET_STATUS_ON_START-1} -eq 1 ] && export STATUS=1
+}
+
+jail_stop() {
+	[ $# -ne 0 ] && eargs
+	local mnt
+	jail_runs || err 1 "No such jail running: ${JAILNAME}"
+	zset status "stop:"
+
+	jail_soft_stop ${JAILNAME%-job-*}
+	# Shutdown all builders
+	if [ ${PARALLEL_JOBS} -ne 0 ]; then
+		# - here to only check for unset, {start,stop}_builders will set this to blank if already stopped
+		for j in ${JOBS-$(jot -w %02d ${PARALLEL_JOBS})}; do
+			jail_soft_stop ${JAILNAME%-job-*}-job-${j} 2>&1 || :
+		done
+	fi
+	msg "Umounting file systems"
+	mnt=`realpath ${MASTERMNT:-${JAILMNT}}`
+	mount | awk -v mnt="${mnt}/" 'BEGIN{ gsub(/\//, "\\\/", mnt); } { if ($3 ~ mnt && $1 !~ /\/dev\/md/ ) { print $3 }}' |  sort -r | xargs umount -f || :
+	umount ${mnt} || :
+
+	if [ -n "${MFSSIZE}" ]; then
+		# umount the ${JAILMNT}/build/$jobno/wrkdirs
+		mount | grep "/dev/md.*${mnt}/build" | while read mntpt; do
+			local dev=`echo $mntpt | awk '{print $1}'`
+			if [ -n "$dev" ]; then
+				umount $dev
+				mdconfig -d -u $dev
+			fi
+		done
+		# umount the $JAILMNT/wrkdirs
+		local dev=`mount | grep "/dev/md.*${mnt}" | awk '{print $1}'`
+		if [ -n "$dev" ]; then
+			umount $dev
+			mdconfig -d -u $dev
+		fi
+	fi
+	zfs rollback -R ${JAILFS%/build/*}@clean
+	zset status "idle:"
+	export STATUS=0
+}
+
+listed_ports() {
+	if [ ${ALL:-0} -eq 1 ]; then
+		PORTSDIR=$(get_portsdir ${PTNAME})
+		for cat in $(awk '$1 == "SUBDIR" { print $3}' ${PORTSDIR}/Makefile); do
+			awk -v cat=${cat}  '$1 == "SUBDIR" { print cat"/"$3}' ${PORTSDIR}/${cat}/Makefile
+		done
+		return
+	fi
+	if [ -z "${LISTPORTS}" ]; then
+		if [ -n "${LISTPKGS}" ]; then
+			grep -v -E '(^[[:space:]]*#|^[[:space:]]*$)' ${LISTPKGS}
+		fi
+	else
+		echo ${LISTPORTS} | tr ' ' '\n'
+	fi
+}
