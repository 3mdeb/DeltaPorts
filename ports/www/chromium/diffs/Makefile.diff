--- Makefile.orig	2017-01-24 06:21:28 UTC
+++ Makefile
@@ -14,7 +14,6 @@ LICENSE=	BSD3CLAUSE LGPL21 MPL
 LICENSE_COMB=	multi
 
 BUILD_DEPENDS=	bash:shells/bash \
-		clang39:devel/llvm39 \
 		python:lang/python \
 		flock:sysutils/flock \
 		gperf:devel/gperf \
@@ -27,13 +26,10 @@ BUILD_DEPENDS=	bash:shells/bash \
 
 LIB_DEPENDS=	libcairo.so:graphics/cairo \
 		libcups.so:print/cups \
-		libdbus-1.so:devel/dbus \
-		libdbus-glib-1.so:devel/dbus-glib \
 		libdrm.so:graphics/libdrm \
 		libexpat.so:textproc/expat2 \
 		libFLAC.so:audio/flac \
 		libfreetype.so:print/freetype2 \
-		libgnome-keyring.so:security/libgnome-keyring \
 		libharfbuzz.so:print/harfbuzz \
 		libexif.so:graphics/libexif \
 		libfontconfig.so:x11-fonts/fontconfig \
@@ -63,7 +59,7 @@ CPE_PRODUCT=	chrome
 USE_PERL5=	build
 USE_XORG=	scrnsaverproto x11 xcb xcomposite xcursor xext xdamage xfixes xi \
 		xproto xrandr xrender xscrnsaver xtst
-USE_GNOME=	atk glib20 gtk20 dconf libxslt libxml2
+USE_GNOME=	atk glib20 gtk20 libxslt libxml2
 MAKE_ARGS=	-C out/${BUILDTYPE}
 SHEBANG_FILES=	chrome/tools/build/linux/chrome-wrapper
 ALL_TARGET=	chrome
@@ -75,7 +71,7 @@ INSTALLS_ICONS=	yes
 # Some parts don't have use_system_* flag, and can be turned on/off by using
 # replace_gn_files.py script, some parts just turned on/off for target host
 # OS "target_os == is_bsd", like libusb, libpci.
-GN_ARGS+=	is_clang=true \
+GN_ARGS+=	\
 		clang_use_chrome_plugins=false \
 		enable_media_router=true \
 		enable_nacl=false \
@@ -92,6 +88,7 @@ GN_ARGS+=	is_clang=true \
 # use_system_icu use_system_harfbuzz use_system_minigbm
 GN_BOOTSTRAP_FLAGS=	--no-clean --no-rebuild
 
+# XXX: technically for us these are a no-no
 # FreeBSD Chromium Api Key
 # Set up Google API keys, see http://www.chromium.org/developers/how-tos/api-keys .
 # Note: these are for FreeBSD use ONLY. For your own distribution,
@@ -103,14 +100,15 @@ GN_ARGS+=	google_api_key="AIzaSyBsp9n41J
 SUB_FILES=	chromium-browser.desktop chrome
 SUB_LIST+=	COMMENT="${COMMENT}"
 
-OPTIONS_DEFINE=	CODECS GCONF KERBEROS DRIVER
+OPTIONS_DEFINE=	CODECS GCONF KERBEROS DRIVER DBUS
 CODECS_DESC=	Compile and enable patented codecs like H.264
+DBUS_DESC=	Hooks for sniffers (gnome dependencies)
 DRIVER_DESC=	Install chromedriver
 OPTIONS_GROUP=		AUDIO TESTS
 OPTIONS_GROUP_AUDIO=	ALSA PULSEAUDIO
 OPTIONS_GROUP_TESTS=	DEBUG TEST
 
-OPTIONS_DEFAULT=	CODECS GCONF KERBEROS ALSA PULSEAUDIO
+OPTIONS_DEFAULT=	CODECS GCONF KERBEROS ALSA DBUS
 OPTIONS_SUB=		yes
 
 GCONF_USE=	GNOME=gconf2
@@ -147,7 +145,7 @@ GN_BOOTSTRAP_FLAGS+=	--debug
 #GN_ARGS+=	is_component_build=true
 .else
 BUILDTYPE=	Release
-.if ${ARCH} == amd64
+.if ${OPSYS} == FreeBSD && ${ARCH} == amd64
 GN_ARGS+=	use_lld=true # harder, better, faster, stronger
 .endif
 GN_ARGS+=	is_debug=false
@@ -155,6 +153,17 @@ GN_ARGS+=	symbol_level=0
 GN_ARGS+=	remove_webcore_debug_symbols=true
 .endif
 
+.if ${PORT_OPTIONS:MDBUS}
+USE_GNOME+=	dconf
+LIB_DEPENDS+=	\
+		libdbus-1.so:devel/dbus \
+		libdbus-glib-1.so:devel/dbus-glib \
+		libgnome-keyring.so:security/libgnome-keyring
+.else
+GN_ARGS+=	use_dbus=false use_gconf=false use_gnome_keyring=false use_gio=false
+##GN_ARGS+=	use_glib=false use_atk=false # bug in x11_event_source_libevent.cc
+.endif
+
 .if ${PORT_OPTIONS:MGCONF}
 GN_ARGS+=	use_gconf=true
 .else
@@ -180,6 +189,7 @@ ALL_TARGET+=	${TEST_TARGETS}
 
 .include <bsd.port.pre.mk>
 
+.if ${OPSYS} == FreeBSD
 CC=		clang39
 CXX=		clang++39
 #optionally set AR, LD, NM, READELF ?
@@ -190,6 +200,7 @@ MAKE_ENV+=	C_INCLUDE_PATH=${LOCALBASE}/i
 		CPLUS_INCLUDE_PATH=${LOCALBASE}/include
 # TODO: move this big extra to small ones
 EXTRA_PATCHES+=	${FILESDIR}/extra-patch-clang
+.endif
 
 .if ${OPSYS} == FreeBSD
 .if ${OSVERSION} < 1100000
