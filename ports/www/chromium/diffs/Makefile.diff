--- Makefile.orig	2015-10-01 17:11:24 UTC
+++ Makefile
@@ -50,6 +50,8 @@ LIB_DEPENDS=	libcairo.so:${PORTSDIR}/gra
 		libxml2.so:${PORTSDIR}/textproc/libxml2 \
 		libwebp.so:${PORTSDIR}/graphics/webp
 
+LIB_DEPENDS+=	libgssapi_krb5.so:${PORTSDIR}/security/krb5
+
 RUN_DEPENDS=	${LOCALBASE}/lib/alsa-lib/libasound_module_pcm_oss.so:${PORTSDIR}/audio/alsa-plugins \
 		droid-fonts-ttf>0:${PORTSDIR}/x11-fonts/droid-fonts-ttf \
 		xdg-open:${PORTSDIR}/devel/xdg-utils
@@ -67,6 +69,8 @@ SHEBANG_FILES=	chrome/tools/build/linux/
 ALL_TARGET=	chrome
 INSTALLS_ICONS=	yes
 
+USES+=		alias
+USE_GCC=	4.8+
 #TODO bz@ : if you do undestand the gyp stuff, third_party/widevine/cdm/widevine_cdm.gyp talks about it (plz install libwidevinecdm.so)
 # See build/common.gypi for all the available variables.
 GYP_DEFINES+=	\
@@ -76,6 +80,7 @@ GYP_DEFINES+=	\
 		linux_strip_binary=1 \
 		use_aura=1 \
 		test_isolation_mode=noop \
+		disable_fatal_linker_warnings=1 \
 		disable_nacl=1 \
 		enable_extensions=1 \
 		enable_one_click_signin=1 \
@@ -194,6 +199,7 @@ CONFIGURE_ENV+=	CC="${CC}" \
 		GYP_GENERATORS=ninja \
 		GYP_DEFINES="${GYP_DEFINES}"
 MAKE_ENV+=	BUILDTYPE=${BUILDTYPE} \
+		GYPFLAGS=-DOS=freebsd \
 		GPERF="${LOCALBASE}/bin/gperf"
 
 .include <bsd.port.pre.mk>
@@ -204,6 +210,7 @@ EXTRA_PATCHES+=	${FILESDIR}/extra-patch-
 CFLAGS+=	-fno-stack-protector # gcc 4.8 cannot find __stack_chk_fail_local
 .else
 GYP_DEFINES+=	clang=1
+CXXFLAGS+=	-D__float128=void -D_GLIBCXX_PERMIT_BACKWARD_HASH=1
 CFLAGS+=	-Wno-unknown-warning-option
 EXTRA_PATCHES+=	${FILESDIR}/extra-patch-clang
 CONFIGURE_ENV+=	AR=/usr/bin/ar
@@ -234,12 +241,36 @@ pre-everything::
 
 post-patch:
 	@${REINPLACE_CMD} -e "s|/usr/local|${LOCALBASE}|" \
+		${WRKSRC}/base/base_paths_posix.cc \
+		${WRKSRC}/base/process/process_handle_freebsd.cc \
 		${WRKSRC}/crypto/crypto.gyp \
 		${WRKSRC}/v8/tools/gyp/v8.gyp \
 		${WRKSRC}/v8/build/toolchain.gypi
 	@${REINPLACE_CMD} -e "s|/usr/local|${PREFIX}|" \
 		${WRKSRC}/chrome/common/chrome_paths.cc \
 		${WRKSRC}/base/base.gyp
+	@${FIND} ${WRKSRC} -type f -name \*\.gyp\* | \
+		${GREP} -vE "/v8/|libusb" | ${XARGS} ${GREP} -l '"freebsd"' | \
+		${XARGS} ${REINPLACE_CMD} -e 's|"freebsd"|"dragonfly"|g'
+	@${FIND} ${WRKSRC} -type f -name \*\.py | ${GREP} -v /v8/ | \
+		${XARGS} ${GREP} -l "'freebsd'" | \
+		${XARGS} ${REINPLACE_CMD} -e "s|'freebsd'|'dragonfly'|g"
+	@${REINPLACE_CMD} -e 's|"freebsd"|"dragonfly"|g' \
+		${WRKSRC}/v8/build/standalone.gypi \
+		${WRKSRC}/v8/build/toolchain.gypi \
+		${WRKSRC}/v8/src/d8.gyp \
+		${WRKSRC}/v8/tools/gyp/v8.gyp
+	@${REINPLACE_CMD} -e 's|0xFFFFFFFF|0x7FFFFFFF|' \
+		${WRKSRC}/third_party/mesa/src/include/GL/glext.h \
+		${WRKSRC}/third_party/mesa/src/src/mapi/glapi/gen/ARB_uniform_buffer_object.xml \
+		${WRKSRC}/third_party/mesa/src/chromium_gensrc/mesa/enums.c \
+		${WRKSRC}/third_party/khronos/GLES3/gl3.h \
+		${WRKSRC}/third_party/khronos/GLES3/gl31.h \
+		${WRKSRC}/third_party/khronos/noninclude/GL/glext.h \
+		${WRKSRC}/third_party/webgl/src/specs/latest/2.0/webgl2.idl \
+		${WRKSRC}/third_party/WebKit/public/platform/WebGraphicsContext3D.h \
+		${WRKSRC}/third_party/angle/include/GLES3/gl3.h \
+		${WRKSRC}/third_party/angle/src/libANGLE/renderer/gl/functionsgl_enums.h
 
 pre-configure:
 	# phajdan-jr: list of things *not* to remove, so maybe the script
